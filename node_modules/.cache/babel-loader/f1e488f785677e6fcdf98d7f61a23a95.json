{"ast":null,"code":"import { createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7efe4119\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"checkout\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Checkout\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Cart is empty. Nothing to render\");\n\nconst _hoisted_4 = {\n  key: 1,\n  class: \"checkout__content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"BaseHeading\"], {\n    variant: \"h1\"\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }), !$setup.isProductsInCart ? (_openBlock(), _createBlock($setup[\"BasePlaceholder\"], {\n    key: 0\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  })) : _createCommentVNode(\"v-if\", true), $setup.isProductsInCart ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode($setup[\"BaseCard\"], null, {\n    default: _withCtx(() => [_createVNode($setup[\"Cart\"], {\n      delivery: $setup.delivery\n    }, null, 8\n    /* PROPS */\n    , [\"delivery\"])]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode($setup[\"BaseCard\"], {\n    class: \"checkout__content\"\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"ChooseDelivery\"], {\n      onOnSelectDeliveryOption: $setup.setDeliveryOption\n    }), _createVNode($setup[\"FadeTransition\"], null, {\n      default: _withCtx(() => [$setup.isGeoApiLocationAllowed && $setup.delivery?.type === 'delivery' ? (_openBlock(), _createBlock($setup[\"DeliveryLocation\"], {\n        key: 0,\n        location: $setup.location,\n        onOnConfirmLocationClick: $setup.confirmLocation\n      }, null, 8\n      /* PROPS */\n      , [\"location\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), $setup.delivery ? (_openBlock(), _createBlock($setup[\"CheckoutForm\"], {\n    key: 0,\n    delivery: $setup.delivery,\n    location: $setup.confirmedLocation\n  }, null, 8\n  /* PROPS */\n  , [\"delivery\", \"location\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;iDACiB;;iDAGvB;;;;EAGEA,KAAK,EAAC;;;uBAPbC,oBAgCM,KAhCN,cAgCM,CA/BJC,aAAgDC,qBAAhD,EAAgD;IAAnCC,OAAO,EAAC;EAA2B,CAAhD,EAAyB;sBAAC,MAAQ,aAAT;;;;EAAA,CAAzB,CA+BI,GA7BoBD,yCAAxBE,aAECF,yBAFD,EAEC;IAAAG;EAAA,CAFD,EAEC;sBADE,MAAgC,aAClC;;;;EAAA,CAFD,sCA6BI,EAzBiCH,yCAArCF,oBAwBM,KAxBN,cAwBM,CAvBJC,aAEWC,kBAFX,EAEW,IAFX,EAEW;sBADT,MAA6B,CAA7BD,aAA6BC,cAA7B,EAA6B;MAAtBI,QAAQ,EAAEJ;IAAY,CAA7B,EAAyB,IAAzB,EAAyB;IAAA;IAAzB,EAAyB,YAAzB,CAA6B,EACpB;;;;EAAA,CAFX,CAuBI,EAnBJD,aAYWC,kBAZX,EAYW;IAZDH,KAAK,EAAC;EAYL,CAZX,EAAmC;sBACjC,MAEkB,CAFlBE,aAEkBC,wBAFlB,EAEkB;MADfK,wBAAsB,EAAEL;IACT,CAFlB,CAEkB,EAElBD,aAMiBC,wBANjB,EAMiB,IANjB,EAMiB;wBALf,MAIE,CAHMA,kCAA2BA,iBAAUM,IAAV,KAAc,4BADjDJ,aAIEF,0BAJF,EAIE;cAAA;QAFCO,QAAQ,EAAEP,eAEX;QADCQ,wBAAsB,EAAER;MACzB,CAJF;;MAAA,oDAIE,EACa;;;;IAAA,CANjB,CAFkB,EAHe;;;;EAAA,CAAnC,CAmBI,EAFIA,iCAHRE,aAIgBF,sBAJhB,EAIgB;UAAA;IAHbI,QAAQ,EAAEJ,eAGG;IAFbO,QAAQ,EAAEP;EAEG,CAJhB;;EAAA,gEAKI,CAxBN,sCAyBI,CAhCN","names":["class","_createElementBlock","_createVNode","$setup","variant","_createBlock","key","delivery","onOnSelectDeliveryOption","type","location","onOnConfirmLocationClick"],"sourceRoot":"","sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/pages/CheckoutPage.vue"],"sourcesContent":["<template>\n  <div class=\"checkout\">\n    <BaseHeading variant=\"h1\">Checkout</BaseHeading>\n\n    <BasePlaceholder v-if=\"!isProductsInCart\"\n      >Cart is empty. Nothing to render</BasePlaceholder\n    >\n\n    <div class=\"checkout__content\" v-if=\"isProductsInCart\">\n      <BaseCard>\n        <Cart :delivery=\"delivery\" />\n      </BaseCard>\n\n      <BaseCard class=\"checkout__content\">\n        <ChooseDelivery\n          @onSelectDeliveryOption=\"setDeliveryOption\"\n        ></ChooseDelivery>\n\n        <FadeTransition>\n          <DeliveryLocation\n            v-if=\"isGeoApiLocationAllowed && delivery?.type === 'delivery'\"\n            :location=\"location\"\n            @onConfirmLocationClick=\"confirmLocation\"\n          />\n        </FadeTransition>\n      </BaseCard>\n\n      <CheckoutForm\n        :delivery=\"delivery\"\n        :location=\"confirmedLocation\"\n        v-if=\"delivery\"\n      ></CheckoutForm>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Cart from \"@/components/Cart.vue\";\nimport BaseCard from \"@/components/UI/BaseCard.vue\";\nimport { getLocationData } from \"@/utils/geoCoding\";\nimport BasePlaceholder from \"@/components/UI/BasePlaceholder.vue\";\nimport ChooseDelivery from \"@/components/ChooseDelivery.vue\";\nimport CheckoutForm from \"@/components/CheckoutForm.vue\";\nimport DeliveryLocation from \"@/components/DeliveryLocation.vue\";\nimport BaseHeading from \"@/components/UI/BaseHeading.vue\";\nimport FadeTransition from \"@/components/UI/FadeTransition.vue\";\nimport { reactive, ref } from \"@vue/reactivity\";\nimport { watch } from \"@vue/runtime-core\";\nimport { useCartStore } from \"@/store/useCartStore\";\nimport { storeToRefs } from \"pinia\";\n\nconst cartStore = useCartStore();\nconst { isProductsInCart } = storeToRefs(cartStore);\n\nconst location = ref(null);\nconst delivery = reactive({});\nconst confirmedLocation = ref(null);\nconst isGeoApiLocationAllowed = ref(false);\n\nconst setDeliveryOption = async (deliveryOption) => {\n  Object.assign(delivery, deliveryOption);\n  if (deliveryOption.type === \"delivery\") {\n    location.value = \"\";\n    await getLocation();\n  }\n};\n\nconst getLocation = async () => {\n  try {\n    const { countryName, city } = await getLocationData();\n\n    isGeoApiLocationAllowed.value = true;\n    location.value = `${city}, ${countryName}`;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst confirmLocation = async (isConfirmed) => {\n  if (!isConfirmed) {\n    confirmedLocation.value = \"\";\n    return;\n  }\n\n  confirmedLocation.value = location.value;\n};\n\nwatch(delivery, () => {\n  confirmedLocation.value = null;\n});\n</script>\n\n<style scoped>\n.checkout {\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 934px;\n  gap: 40px;\n}\n\n.checkout__content {\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}