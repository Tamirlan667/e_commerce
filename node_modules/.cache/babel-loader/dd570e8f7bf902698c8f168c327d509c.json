{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nconst BASE_GEOCODING_URL = 'https://api.bigdatacloud.net/data/reverse-geocode-client';\n\nconst getCoordinates = async () => {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nconst fetchLocationData = async (latitude, longitude) => {\n  try {\n    const res = await fetch(`${BASE_GEOCODING_URL}?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);\n    if (!res.ok) throw new Error('Unable to fetch location data');\n    return await res.json();\n  } catch (error) {\n    console.log('fetchLocationData:', error);\n  }\n};\n\nexport const getLocationData = async () => {\n  try {\n    const data = await getCoordinates();\n\n    if (data) {\n      return await fetchLocationData(data.latitude, data.longitude);\n    }\n  } catch (error) {\n    console.log('getLocationData:', error);\n  }\n};","map":{"version":3,"names":["BASE_GEOCODING_URL","getCoordinates","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","fetchLocationData","latitude","longitude","res","fetch","ok","Error","json","error","console","log","getLocationData","data"],"sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/utils/geoCoding.js"],"sourcesContent":["const BASE_GEOCODING_URL = 'https://api.bigdatacloud.net/data/reverse-geocode-client';\n\nconst getCoordinates = async () => {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n};\n\nconst fetchLocationData = async (latitude, longitude) => {\n  try {\n    const res = await fetch(`${BASE_GEOCODING_URL}?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);\n\n    if (!res.ok) throw new Error('Unable to fetch location data');\n\n    return await res.json();\n  } catch (error) {\n    console.log('fetchLocationData:', error);\n  }\n};\n\nexport const getLocationData = async () => {\n  try {\n    const data = await getCoordinates();\n    if (data) {\n      return await fetchLocationData(data.latitude, data.longitude);\n    }\n  } catch (error) {\n    console.log('getLocationData:', error);\n  }\n};\n"],"mappings":";AAAA,MAAMA,kBAAkB,GAAG,0DAA3B;;AAEA,MAAMC,cAAc,GAAG,YAAY;EACjC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;EACD,CAFM,CAAP;AAGD,CAJD;;AAMA,MAAMI,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA+B;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEZ,kBAAmB,aAAYS,QAAS,cAAaC,SAAU,sBAAnE,CAAvB;IAEA,IAAI,CAACC,GAAG,CAACE,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;IAEb,OAAO,MAAMH,GAAG,CAACI,IAAJ,EAAb;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;EACD;AACF,CAVD;;AAYA,OAAO,MAAMG,eAAe,GAAG,YAAY;EACzC,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMnB,cAAc,EAAjC;;IACA,IAAImB,IAAJ,EAAU;MACR,OAAO,MAAMZ,iBAAiB,CAACY,IAAI,CAACX,QAAN,EAAgBW,IAAI,CAACV,SAArB,CAA9B;IACD;EACF,CALD,CAKE,OAAOM,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;EACD;AACF,CATM"},"metadata":{},"sourceType":"module"}