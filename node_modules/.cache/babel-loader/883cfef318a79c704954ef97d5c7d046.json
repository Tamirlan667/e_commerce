{"ast":null,"code":"import { ref } from \"@vue/reactivity\";\nimport BaseButton from \"./UI/Buttons/BaseButton.vue\";\nexport default {\n  __name: 'ShowMore',\n  props: {\n    count: {\n      type: Number,\n      required: true\n    },\n    listLength: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: [\"onShowMoreClick\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const PRODUCTS_LIMIT = 4;\n    let itemsCountToShow = ref(props.count);\n\n    const loadMore = () => {\n      if (props.count > props.listLength) return;\n      itemsCountToShow.value += PRODUCTS_LIMIT;\n      emit(\"onShowMoreClick\", itemsCountToShow.value);\n    };\n\n    const __returned__ = {\n      PRODUCTS_LIMIT,\n      emit,\n      props,\n      itemsCountToShow,\n      loadMore,\n      ref,\n      BaseButton\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAOA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;;;;;;;;;;;;;;;;;;;IAEA,MAAMC,cAAc,GAAG,CAAvB;IAaA,IAAIC,gBAAgB,GAAGH,GAAG,CAACI,KAAK,CAACC,KAAP,CAA1B;;IAEA,MAAMC,QAAQ,GAAG,MAAM;MACrB,IAAIF,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACG,UAAxB,EAAoC;MAEpCJ,gBAAgB,CAACK,KAAjB,IAA0BN,cAA1B;MACAO,IAAI,CAAC,iBAAD,EAAoBN,gBAAgB,CAACK,KAArC,CAAJ;IACD,CALD","names":["ref","BaseButton","PRODUCTS_LIMIT","itemsCountToShow","props","count","loadMore","listLength","value","emit"],"sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/components/ShowMore.vue"],"sourcesContent":["<template>\n  <BaseButton variant=\"contained\" mode=\"primary\" @click=\"loadMore\"\n    >Show more</BaseButton\n  >\n</template>\n\n<script setup>\nimport { ref } from \"@vue/reactivity\";\nimport BaseButton from \"./UI/Buttons/BaseButton.vue\";\n\nconst PRODUCTS_LIMIT = 4;\nconst emit = defineEmits([\"onShowMoreClick\"]);\nconst props = defineProps({\n  count: {\n    type: Number,\n    required: true,\n  },\n  listLength: {\n    type: Number,\n    required: true,\n  },\n});\n\nlet itemsCountToShow = ref(props.count);\n\nconst loadMore = () => {\n  if (props.count > props.listLength) return;\n\n  itemsCountToShow.value += PRODUCTS_LIMIT;\n  emit(\"onShowMoreClick\", itemsCountToShow.value);\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}