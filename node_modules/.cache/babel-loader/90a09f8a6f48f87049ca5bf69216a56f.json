{"ast":null,"code":"import DeleteIcon from \"./icons/DeleteIcon.vue\";\nimport BaseIconButton from \"./UI/Buttons/BaseIconButton.vue\";\nimport QuantityBlock from \"./UI/QuantityBlock.vue\";\nimport { computed } from \"@vue/runtime-core\";\nimport { useRouter } from \"vue-router\";\nimport { useCartStore } from \"@/store/useCartStore\";\nimport { storeToRefs } from \"pinia\";\nexport default {\n  __name: 'Cart',\n  props: {\n    // products: {\n    //   type: Array,\n    //   required: true,\n    // },\n    delivery: {\n      type: Object,\n      required: false\n    } // totalProductsAddedToCart: {\n    //   type: Number,\n    //   required: true,\n    // },\n    // totalAmount: {\n    //   type: Number,\n    //   required: true,\n    // },\n\n  },\n  emits: [\"onClick\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const router = useRouter();\n    const cartStore = useCartStore();\n    const {\n      cart,\n      totalProductsAddedToCart,\n      totalAmount\n    } = storeToRefs(cartStore);\n\n    const incrementQuantity = id => {\n      cartStore.incrementQuantity(id);\n    };\n\n    const decrementQuantity = id => {\n      cartStore.decrementQuantity(id);\n    };\n\n    const removeProductFromCart = id => {\n      cartStore.removeProductFromCart(id);\n    };\n\n    const isFreeDelivery = computed(() => props.delivery.price === 0);\n    const deliveryPrice = computed(() => {\n      if (!props.delivery.name) return;\n      return isFreeDelivery.value ? \"Free\" : props.delivery.price;\n    });\n    const total = computed(() => isFreeDelivery.value ? totalAmount.value : (deliveryPrice.value + totalAmount.value).toFixed(2));\n\n    const goToProductPage = id => {\n      router.push(`/product/${id}`);\n      emit(\"onClick\", \"cart\");\n    };\n\n    const __returned__ = {\n      props,\n      emit,\n      router,\n      cartStore,\n      cart,\n      totalProductsAddedToCart,\n      totalAmount,\n      incrementQuantity,\n      decrementQuantity,\n      removeProductFromCart,\n      isFreeDelivery,\n      deliveryPrice,\n      total,\n      goToProductPage,\n      DeleteIcon,\n      BaseIconButton,\n      QuantityBlock,\n      computed,\n      useRouter,\n      useCartStore,\n      storeToRefs\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAoFA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsBA,MAAMC,MAAM,GAAGH,SAAS,EAAxB;IACA,MAAMI,SAAS,GAAGH,YAAY,EAA9B;IACA,MAAM;MAACI,IAAD;MAAOC,wBAAP;MAAiCC;IAAjC,IAAgDL,WAAW,CAACE,SAAD,CAAjE;;IAEA,MAAMI,iBAAiB,GAAIC,EAAD,IAAQ;MAChCL,SAAS,CAACI,iBAAV,CAA4BC,EAA5B;IACD,CAFD;;IAIA,MAAMC,iBAAiB,GAAID,EAAD,IAAQ;MAChCL,SAAS,CAACM,iBAAV,CAA4BD,EAA5B;IACD,CAFD;;IAIA,MAAME,qBAAqB,GAAIF,EAAD,IAAQ;MACpCL,SAAS,CAACO,qBAAV,CAAgCF,EAAhC;IACD,CAFD;;IAIA,MAAMG,cAAc,GAAGb,QAAQ,CAAC,MAAMc,KAAK,CAACC,QAAN,CAAeC,KAAf,KAAyB,CAAhC,CAA/B;IAEA,MAAMC,aAAa,GAAGjB,QAAQ,CAAC,MAAM;MACnC,IAAI,CAACc,KAAK,CAACC,QAAN,CAAeG,IAApB,EAA0B;MAC1B,OAAOL,cAAc,CAACM,KAAf,GAAuB,MAAvB,GAAgCL,KAAK,CAACC,QAAN,CAAeC,KAAtD;IACD,CAH6B,CAA9B;IAKA,MAAMI,KAAK,GAAGpB,QAAQ,CAAC,MACrBa,cAAc,CAACM,KAAf,GACIX,WAAW,CAACW,KADhB,GAEI,CAACF,aAAa,CAACE,KAAd,GAAsBX,WAAW,CAACW,KAAnC,EAA0CE,OAA1C,CAAkD,CAAlD,CAHgB,CAAtB;;IAMA,MAAMC,eAAe,GAAIZ,EAAD,IAAQ;MAC9BN,MAAM,CAACmB,IAAP,CAAa,YAAWb,EAAG,EAA3B;MACAc,IAAI,CAAC,SAAD,EAAY,MAAZ,CAAJ;IACD,CAHD","names":["DeleteIcon","BaseIconButton","QuantityBlock","computed","useRouter","useCartStore","storeToRefs","router","cartStore","cart","totalProductsAddedToCart","totalAmount","incrementQuantity","id","decrementQuantity","removeProductFromCart","isFreeDelivery","props","delivery","price","deliveryPrice","name","value","total","toFixed","goToProductPage","push","emit"],"sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/components/Cart.vue"],"sourcesContent":["<template>\n  <section class=\"cart\">\n    <div class=\"cart__mobile\">\n      <div class=\"cart__grid\">\n        <label class=\"cart__title\">Photo</label>\n        <label class=\"cart__title\">Title</label>\n        <label class=\"cart__title\">Quantity</label>\n        <label class=\"cart__title\">Price</label>\n        <label class=\"cart__title\">Subtotal</label>\n      </div>\n    </div>\n\n    <ul class=\"cart__list\">\n      <li class=\"cart__grid\" v-for=\"product in cart\" :key=\"product.id\">\n        <img\n          :src=\"product.image\"\n          class=\"cart__img\"\n          :alt=\"product.title\"\n          @click=\"goToProductPage(product.id)\"\n        />\n        <p\n          class=\"cart__item-title cart__item-text\"\n          @click=\"goToProductPage(product.id)\"\n        >\n          {{ product.title }}\n        </p>\n\n        <div class=\"cart__mobile\">\n          <span>Quantity:</span>\n          <QuantityBlock\n            :quantity=\"product.quantity\"\n            @increment=\"incrementQuantity(product.id)\"\n            @decrement=\"decrementQuantity(product.id)\"\n          ></QuantityBlock>\n        </div>\n\n        <div class=\"cart__mobile\">\n          <span>Price:</span>\n          <p class=\"cart__item-text\">${{ product.price }}</p>\n        </div>\n\n        <div class=\"cart__mobile\">\n          <span>Subtotal:</span>\n          <p class=\"cart__item-text\">\n            ${{ (product.price * product.quantity).toFixed(2) }}\n          </p>\n        </div>\n\n        <div class=\"cart__mobile-action\">\n          <BaseIconButton\n            @click=\"removeProductFromCart(product.id)\"\n            variant=\"contained\"\n            iconHoverColor=\"#ef2525\"\n            iconColor=\"#74747474\"\n            opacity=\"1\"\n          >\n            <DeleteIcon />\n          </BaseIconButton>\n        </div>\n      </li>\n    </ul>\n\n    <div class=\"cart__totals-block\">\n      <span class=\"cart__totals-block-title\">Total quantity:</span>\n      <p>{{ totalProductsAddedToCart }} pcs</p>\n    </div>\n    <div class=\"cart__totals-block\">\n      <span class=\"cart__totals-block-title\">Total amount: </span>\n      <p>${{ totalAmount }}</p>\n    </div>\n\n    <div class=\"cart__totals-block\" v-if=\"delivery && delivery.name\">\n      <span class=\"cart__totals-block-title\">Delivery price:</span>\n      <p>{{ !isFreeDelivery ? \"$\" : \"\" }}{{ deliveryPrice }}</p>\n    </div>\n\n    <div class=\"cart__totals-block\" v-if=\"delivery && delivery.name\">\n      <span class=\"cart__totals-block-title\">Total:</span>\n      <p>${{ total }}</p>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport DeleteIcon from \"./icons/DeleteIcon.vue\";\nimport BaseIconButton from \"./UI/Buttons/BaseIconButton.vue\";\nimport QuantityBlock from \"./UI/QuantityBlock.vue\";\nimport { computed } from \"@vue/runtime-core\";\nimport { useRouter } from \"vue-router\";\nimport { useCartStore } from \"@/store/useCartStore\";\nimport { storeToRefs } from \"pinia\";\nconst props = defineProps({\n  // products: {\n  //   type: Array,\n  //   required: true,\n  // },\n  delivery: {\n    type: Object,\n    required: false,\n  },\n  // totalProductsAddedToCart: {\n  //   type: Number,\n  //   required: true,\n  // },\n  // totalAmount: {\n  //   type: Number,\n  //   required: true,\n  // },\n});\n\nconst emit = defineEmits([\"onClick\"]);\n\nconst router = useRouter();\nconst cartStore = useCartStore();\nconst {cart, totalProductsAddedToCart, totalAmount} = storeToRefs(cartStore)\n\nconst incrementQuantity = (id) => {\n  cartStore.incrementQuantity(id);\n};\n\nconst decrementQuantity = (id) => {\n  cartStore.decrementQuantity(id);\n};\n\nconst removeProductFromCart = (id) => {\n  cartStore.removeProductFromCart(id);\n};\n\nconst isFreeDelivery = computed(() => props.delivery.price === 0);\n\nconst deliveryPrice = computed(() => {\n  if (!props.delivery.name) return;\n  return isFreeDelivery.value ? \"Free\" : props.delivery.price;\n});\n\nconst total = computed(() =>\n  isFreeDelivery.value\n    ? totalAmount.value\n    : (deliveryPrice.value + totalAmount.value).toFixed(2)\n);\n\nconst goToProductPage = (id) => {\n  router.push(`/product/${id}`);\n  emit(\"onClick\", \"cart\");\n};\n</script>\n\n<style scoped>\n.cart {\n  display: grid;\n}\n\n.cart__title {\n  display: none;\n}\n\n.cart__grid {\n  display: grid;\n  gap: 15px;\n  border-bottom: 1px solid lightgray;\n}\n\n.cart__mobile {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.cart__mobile-action {\n  justify-self: start;\n  padding: 0 0 10px;\n}\n\n.cart__mobile > span {\n  font-weight: 600;\n}\n\n.cart__list {\n  display: grid;\n  gap: 20px;\n  padding: 0;\n  list-style: none;\n}\n\n.cart__img {\n  display: none;\n}\n\n.cart__item-title {\n  cursor: pointer;\n  justify-self: start;\n  text-align: left;\n}\n\n.cart__item-title:hover {\n  transition: color 0.1s linear;\n  color: #ed8939;\n}\n\n.cart__item-text {\n  font-size: 14px;\n}\n\n.cart__totals-block {\n  display: flex;\n  gap: 20px;\n  justify-content: flex-end;\n  padding: 15px 0 0;\n}\n\n.cart__actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 20px;\n}\n\n.cart__totals-block-title {\n  display: block;\n  font-weight: 600;\n}\n\n@media screen and (min-width: 768px) {\n  .cart {\n    display: block;\n  }\n  .cart__grid {\n    max-width: 900px;\n    margin: auto;\n    align-items: center;\n    justify-items: center;\n    grid-template-columns: 1fr 4fr 1fr 1fr 1fr 1fr;\n    grid-gap: 15px;\n    color: #222;\n    padding: 15px 0;\n    border-bottom: 1px solid lightgray;\n  }\n\n  .cart__title {\n    display: block;\n    font-weight: 600;\n  }\n\n  .cart__img {\n    cursor: pointer;\n    display: block;\n    width: 100%;\n    height: 40px;\n    object-fit: contain;\n  }\n\n  .cart__img:hover {\n    opacity: 0.7;\n    transition: opacity 0.2s linear;\n  }\n\n  .cart__mobile {\n    display: contents;\n  }\n\n  .cart__mobile > span {\n    display: none;\n  }\n\n  .cart__mobile-action {\n    justify-self: center;\n    padding: 0;\n  }\n\n  .cart__totals-block {\n    padding: 15px 20px 0 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}