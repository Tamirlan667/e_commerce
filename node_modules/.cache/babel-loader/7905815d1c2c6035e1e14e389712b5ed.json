{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-625c68b8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"timer\"\n};\nconst _hoisted_2 = {\n  class: \"timer__svg\",\n  viewBox: \"0 0 100 100\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_3 = {\n  class: \"timer__circle\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"circle\", {\n  class: \"timer__path\",\n  cx: \"50\",\n  cy: \"50\",\n  r: \"45\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = [\"stroke-dasharray\"];\nconst _hoisted_6 = {\n  class: \"timer__label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_2, [_createElementVNode(\"g\", _hoisted_3, [_hoisted_4, _createElementVNode(\"path\", {\n    \"stroke-dasharray\": $setup.circleDasharray,\n    class: _normalizeClass([$setup.remainingPathColor, \"timer__remaining-time\"]),\n    d: \"\\n            M 50, 50\\n            m -45, 0\\n            a 45,45 0 1,0 90,0\\n            a 45,45 0 1,0 -90,0\\n          \"\n  }, null, 10\n  /* CLASS, PROPS */\n  , _hoisted_5)])])), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.timer), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;EAEPA,KAAK,EAAC;EACNC,OAAO,EAAC;EACRC,KAAK,EAAC;;;EAEHF,KAAK,EAAC;;;gEACPG,oBAAqD,QAArD,EAAqD;EAA7CH,KAAK,EAAC,aAAuC;EAAzBI,EAAE,EAAC,IAAsB;EAAjBC,EAAE,EAAC,IAAc;EAATC,CAAC,EAAC;AAAO,CAArD;;AAAA;;;;EAgBEN,KAAK,EAAC;;;uBAvBdO,oBAwBM,KAxBN,cAwBM,gBAvBJA,oBAoBM,KApBN,cAoBM,CAfJJ,oBAcI,GAdJ,cAcI,CAbFK,UAaE,EAXFL,oBAUQ,MAVR,EAUQ;IATL,oBAAkBM,sBASb;IARLT,KAAK,mBAAES,yBAAF,EACA,uBADA,EAQA;IANNC,CAAC,EAAC;EAMI,CAVR;;EAAA,aAWE,CAdJ,CAeI,CApBN,CAuBI,GADJP,oBAA6C,MAA7C,cAA6CQ,iBAAfF,YAAe,CAA7C,EAAmC;EAAA;EAAnC,CACI,CAxBN","names":["class","viewBox","xmlns","_createElementVNode","cx","cy","r","_createElementBlock","_hoisted_4","$setup","d","_toDisplayString"],"sourceRoot":"","sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/components/CountDownTimer.vue"],"sourcesContent":["<template>\n  <div class=\"timer\">\n    <svg\n      class=\"timer__svg\"\n      viewBox=\"0 0 100 100\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g class=\"timer__circle\">\n        <circle class=\"timer__path\" cx=\"50\" cy=\"50\" r=\"45\" />\n\n        <path\n          :stroke-dasharray=\"circleDasharray\"\n          :class=\"remainingPathColor\"\n          class=\"timer__remaining-time\"\n          d=\"\n            M 50, 50\n            m -45, 0\n            a 45,45 0 1,0 90,0\n            a 45,45 0 1,0 -90,0\n          \"\n        ></path>\n      </g>\n    </svg>\n\n    <span class=\"timer__label\">{{ timer }}</span>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"@vue/reactivity\";\nimport { computed, watch } from \"@vue/runtime-core\";\nconst FULL_DASH_ARRAY = 283;\nconst TIMER_COLOR = {\n  base: {\n    color: \"orange\",\n  },\n  alert: {\n    color: \"red\",\n    threshold: 2,\n  },\n};\n\nconst emit = defineEmits([\"onTimerEnd\"]);\nconst props = defineProps({\n  timeout: {\n    type: Number,\n    required: true,\n  },\n});\n\nconst timer = ref(null);\n\nconst countDown = (sec) => {\n  timer.value = sec;\n  let interval = setInterval(() => {\n    timer.value--;\n\n    if (timer.value === 0) {\n      emit(\"onTimerEnd\");\n      clearInterval(interval);\n      return;\n    }\n  }, 1000);\n};\n\nconst circleDasharray = computed(\n  () => `${(timeFraction.value * FULL_DASH_ARRAY).toFixed(0)} 283`\n);\n\nconst timeFraction = computed(() => {\n  const rawTimeFraction = timer.value / props.timeout;\n  return rawTimeFraction - (1 / props.timeout) * (1 - rawTimeFraction);\n});\n\nconst remainingPathColor = computed(() => {\n  const { base, alert } = TIMER_COLOR;\n\n  if (timer.value <= alert.threshold) return alert.color;\n  return base.color;\n});\n\nwatch(\n  () => props.timeout,\n  () => {\n    countDown(props.timeout);\n  },\n  { immediate: true }\n);\n</script>\n\n<style scoped>\n.timer {\n  position: relative;\n  width: 50px;\n  height: 50px;\n}\n\n.timer__svg {\n  transform: scaleX(-1);\n}\n\n.timer__circle {\n  fill: none;\n  stroke: none;\n}\n\n.timer__path {\n  stroke-width: 10px;\n  stroke: lightgray;\n}\n\n.timer__remaining-time {\n  stroke-width: 10px;\n  stroke-linecap: round;\n  transform: rotate(90deg);\n  transform-origin: center;\n  transition: 1s linear all;\n  fill-rule: nonzero;\n  stroke: currentColor;\n}\n\n.timer__remaining-time.orange {\n  color: orange;\n}\n\n.timer__remaining-time.red {\n  color: red;\n}\n\n.timer__label {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}