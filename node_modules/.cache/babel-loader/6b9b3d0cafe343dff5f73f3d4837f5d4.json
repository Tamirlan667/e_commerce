{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-31c6b5c8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"select\"\n};\nconst _hoisted_2 = {\n  class: \"select__list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"select__list-item-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: option.id\n    }, [_createElementVNode(\"button\", {\n      type: \"button\",\n      class: _normalizeClass(['select__list-item-button', option.name === $setup.isActiveOption && 'active']),\n      onClick: $event => $setup.select(option)\n    }, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(option.name), 1\n    /* TEXT */\n    )], 10\n    /* CLASS, PROPS */\n    , _hoisted_3)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;EACLA,KAAK,EAAC;;;;EAUEA,KAAK,EAAC;;;uBAXpBC,oBAeM,KAfN,cAeM,CAdJC,oBAaK,IAbL,cAaK,oBAZHD,oBAWKE,SAXL,EAWK,IAXL,EAWKC,YAXgBC,cAWhB,EAXMC,MAAiB,IAAX;yBAAjBL,oBAWK,IAXL,EAWK;MAX0BM,GAAG,EAAED,MAAM,CAACE;IAWtC,CAXL,GACEN,oBASS,QATT,EASS;MARPO,IAAI,EAAC,QAQE;MAPNT,KAAK,+CAAwDM,MAAM,CAACI,IAAP,KAAgBC,qBAAhB,IAA8B,QAAtF,EAOC;MAHNC,OAAK,YAAED,cAAOL,MAAP;IAGD,CATT,GAQEJ,oBAA6D,MAA7D,cAA6DW,iBAArBP,MAAM,CAACI,IAAc,CAA7D,EAAmD;IAAA;IAAnD,EARF;;IAAA,cADF;GAWK,CAXL;;EAAA,CAYG,EAbL,CAcI,CAfN","names":["class","_createElementBlock","_createElementVNode","_Fragment","_renderList","$props","option","key","id","type","name","$setup","onClick","_toDisplayString"],"sourceRoot":"","sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/e-commerce-app/src/components/UI/BaseSelect.vue"],"sourcesContent":["<template>\n  <div class=\"select\">\n    <ul class=\"select__list\">\n      <li v-for=\"option in options\" :key=\"option.id\">\n        <button\n          type=\"button\"\n          :class=\"[\n            'select__list-item-button',\n            option.name === isActiveOption && 'active',\n          ]\"\n          @click=\"select(option)\"\n        >\n          <span class=\"select__list-item-text\">{{ option.name }}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"@vue/reactivity\";\nconst emit = defineEmits([\"onSelectClick\"]);\nconst props = defineProps({\n  options: {\n    type: Array,\n    required: true,\n  },\n});\n\nconst isActiveOption = ref(null);\n\nconst select = (option) => {\n  isActiveOption.value = option.name;\n  emit(\"onSelectClick\", option);\n};\n</script>\n\n<style scoped>\n.select {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n}\n.select__list {\n  display: flex;\n  gap: 20px;\n  padding: 0;\n  list-style: none;\n}\n\n.select__list-item-button {\n  padding: 20px 30px;\n  border: 2px solid #e2e2e2;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: transparent;\n  color: #222222;\n}\n\n.select__list-item-text {\n  font-family: \"Open Sans\";\n}\n\n.select__list-item-button:hover:not(.active) {\n  transition: border-color 0.3s linear;\n  border-color: rgba(255, 168, 1, 0.4);\n}\n\n.active {\n  border: 2px solid #ffa801;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}